

// CHATGPT

// Funktion som simulerar ett t칛rningskast (slumpar ett tal mellan 1 och 6)
function kastaTarning() {
    return Math.floor(Math.random() * 6) + 1;
}

// Huvudfunktionen f칬r spelet
function spelaTarningspel() {
    let kastantal = 0;
    let nuvarandeM친l = 1;
    let stegeSlutf칬rd = false;

    console.log("Spelet har startat! M친let 칛r att f친 en stege (1, 2, 3, 4, 5, 6).");

    // Forts칛tt kasta tills stegen (1, 2, 3, 4, 5, 6) 칛r klar
    while (!stegeSlutf칬rd) {
        // Kasta t칛rningen
        let kastResultat = kastaTarning();
        kastantal++;

        // Logga ut resultatet av varje kast
        console.log("Kast " + kastantal + ": T칛rningen visar " + kastResultat);

        // Kontrollera om r칛tt tal har kastats
        if (kastResultat === nuvarandeM친l) {
            console.log("R칛tt tal! Stegen nu: " + nuvarandeM친l);
            nuvarandeM친l++;
        } else {
            console.log("Fel tal. F칬rs칬k igen.");
        }

        // Kontrollera om hela stegen (1, 2, 3, 4, 5, 6) 칛r klar
        if (nuvarandeM친l > 6) {
            stegeSlutf칬rd = true;
            console.log("Stegen slutf칬rdes! Spelet 칛r klart.");
        }
    }

    // Skriv ut resultatet
    console.log("Spelet 칛r klart! Totalt antal kast: " + kastantal);
}

// Starta spelet
spelaTarningspel();





// AIZO


// // Funktion f칬r att simulera ett t칛rningskast



// function kastaTarning() {
//     return Math.floor(Math.random() * 6) + 1;
// }

// // Variabler f칬r att h친lla reda p친 steget och antalet kast
// let steg = 1;
// let antalKast = 0;

// // S친 l칛nge vi inte har n친tt steg 7 (eftersom vi b칬rjar fr친n 1 till 6)
// while (steg <= 6) {
//     let resultat = kastaTarning();
//     antalKast++;

//     console.log(`Kast ${antalKast}: T칛rningen visar ${resultat}`);

//     // Kontrollera om resultatet 칛r det vi beh칬ver f칬r det aktuella steget
//     if (resultat === steg) {
//         console.log(`Steg ${steg} uppn친tt! 游꿀`);
//         steg++;
//     }
// }

// console.log(`Antal kast totalt: ${antalKast}`);